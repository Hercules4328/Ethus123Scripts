local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local lastHealth = humanoid.Health

-- Função que verifica se o dano foi causado por outro jogador e revida
local function onHumanoidTakingDamage()
    local currentHealth = humanoid.Health

    -- Se o personagem perdeu vida
    if currentHealth < lastHealth then
        -- Pega todos os jogadores no jogo
        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer ~= player then
                local otherCharacter = otherPlayer.Character
                if otherCharacter then
                    local otherHumanoid = otherCharacter:FindFirstChildOfClass("Humanoid")
                    local otherHRP = otherCharacter:FindFirstChild("HumanoidRootPart")
                    local myHRP = character:FindFirstChild("HumanoidRootPart")

                    -- Verifica se o outro jogador está perto e pode ter causado o dano
                    if otherHumanoid and otherHRP and myHRP then
                        local distance = (otherHRP.Position - myHRP.Position).Magnitude
                        local maxDistance = 50 -- ajusta conforme necessário
                        if distance <= maxDistance then
                            -- Aplica dano repetidamente ao outro jogador
                            while currentHealth < lastHealth do
                                game:GetService("ReplicatedStorage").SkillsInRS.RemoteEvent:FireServer("damage", {["EnemyHumanoid"] = otherHumanoid})
                                wait(1) -- Ajuste o intervalo conforme necessário

                                -- Atualiza a saúde atual para garantir que o loop pare quando o dano não estiver mais ocorrendo
                                currentHealth = humanoid.Health
                                if currentHealth >= lastHealth then
                                    break
                                end
                            end
                        end
                    end
                end
            end
        end
    end

    lastHealth = currentHealth
end

-- Conecta a função ao evento "HealthChanged" do humanoide
humanoid.HealthChanged:Connect(onHumanoidTakingDamage)
